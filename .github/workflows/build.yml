name: build

on:
  workflow_call:
    inputs:
      build-configuration: 
        required: true
        type: string
      solution-path:
        required: true
        type: string
      build-path:
        required: true
        type: string

jobs: 
  build:
    strategy:
      matrix:
        os: [windows-latest]
        platform: ['x64', 'x86']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        name: Checkout repository
      
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2
      
      - name: Restore
        run: msbuild $env:SolutionPath /t:Restore /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
        env:
          SolutionPath: ${{ inputs.solution-path }}
          Configuration: ${{ inputs.build-configuration }}
          TargetPlatform: ${{ matrix.platform }}

      - name: Build
        run: msbuild $env:SolutionPath /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration
        env:
          SolutionPath: ${{ inputs.solution-path }}
          Configuration: ${{ inputs.build-configuration }}
          TargetPlatform: ${{ matrix.platform }}
      
      - name: Run tests
        run: '& "$(vswhere -property installationPath)\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" **\bin\**\*test.dll **\bin\**\*tests.dll /logger:trx /ResultsDirectory:test-results'
      
      - name: Publish Test Results
        if: ${{ always() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results/**/*.trx

      - name: Get current version and OS prefix
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          Import-Module .\build\project-version-manager.psm1 -Force -Verbose
          $version = Get-Version
          "version=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          $os = [string]::Empty
          switch("${{ matrix.os }}") {
            "windows-latest" {
              $os = "win"
            }
            default {
              Write-Host "Unknow os '${{ matrix.os }}'"
              $os = "os"
            }
          }
          "os=$os" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          
      - name: Publish artifacts
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.os }}-${{ matrix.platform }}-${{ env.version }}'
          path: ${{ inputs.build-path }}\${{ matrix.platform }}\${{ inputs.build-configuration }}\*
