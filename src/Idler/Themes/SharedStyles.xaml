<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Hides ComboBox items which has property Hidden=True -->
    <Style x:Key="HidableComboboxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Visibility"
                Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Hidden}"
                         Value="true">
                <Setter Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- This fixes incorrect behavior of scrollbar but it removes virtualization,
    to get logical scrolling back, filtering within custom collection view must be implemented instead -->
    <Style x:Key="PhantomScrollingFix"
           TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False" />
    </Style>

    <!-- Fixes bug with binding in ComboBox. 
    https://stackoverflow.com/questions/47391020/cannot-find-source-for-binding-with-reference-relativesource-findancestor -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
    </Style>

    <Style x:Key="BorderlessListView"
           TargetType="{x:Type ListView}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VirtualizingStackPanel.ScrollUnit"
                Value="Pixel" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer>
                        <ScrollViewer.Style>
                            <Style TargetType="ScrollViewer">
                                <Style.Triggers>
                                    <Trigger Property="ComputedVerticalScrollBarVisibility"
                                             Value="Visible">
                                        <Setter Property="Padding"
                                                Value="0 0 5 0" />
                                    </Trigger>
                                    <Trigger Property="ComputedVerticalScrollBarVisibility"
                                             Value="Collapsed">
                                        <Setter Property="Padding"
                                                Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ScrollViewer.Style>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderlessButton"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="0"
                            BorderBrush="Black"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Image x:Key="DeleteIconImage_Light"
           x:Shared="false"
           Source="{StaticResource DeleteIcon_Light}" />

    <Image x:Key="DeleteIconImage"
           x:Shared="false"
           Source="{StaticResource DeleteIcon}" />

    <Image x:Key="DeleteIconImage_Disabled"
           x:Shared="false"
           Source="{StaticResource DeleteIcon_Disabled}" />

    <Style x:Key="RemoveButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BorderlessButton}">
        <Setter Property="Content"
                Value="{StaticResource DeleteIconImage_Light}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Content"
                        Value="{StaticResource DeleteIconImage}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Content"
                        Value="{StaticResource DeleteIconImage_Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>